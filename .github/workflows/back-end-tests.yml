name: Backend Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test_backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 11 and Maven
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"

      - name: Build and Test with Maven
        run: |
          cd back
          mvn clean test

      - name: Upload Test Results
        uses: actions/upload-artifact@v2
        with:
          name: test-results-back
          path: ${{ github.workspace }}/back/target/site/jacoco

  sonar-back:
    name: Build_and_analyze
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: "zulu"

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD/back/**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD/back
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Shiffff_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD

  dockerCreate:
    needs: [test_backend, sonar-back]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image and push on Dockerhub
        uses: docker/build-push-action@v5
        with:
          context: ./back
          push: true
          tags: back_end_p10:$(date +%s)
