name: CI - BobApp

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend-tests:
    name: Backend - Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: maven-${{ runner.os }}-

      - name: Build and run tests
        working-directory: back
        run: mvn clean verify

      - name: Generate JaCoCo coverage report
        working-directory: back
        run: mvn jacoco:report

      - name: Upload JaCoCo report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: back/target/site/jacoco/

  frontend-tests:
    name: Frontend - Build & Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: front/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: front

      - name: Run frontend tests
        run: npm run test -- --watch=false --browsers=ChromeHeadless
        working-directory: front



  sonar-analysis:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: backend-tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Meilleure pertinence d'analyse

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'  # Compatible avec SonarCloud

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze with SonarCloud
        working-directory: back  # ✅ Exécuter dans le bon répertoire
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=joselct17_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD
      - name: SonarQube Quality Gate
        run: |
          STATUS=$(curl -s -u "${{ secrets.SONAR_TOKEN }}:" \
          "${{ secrets.SONAR_HOST_URL }}/api/qualitygates/project_status?projectKey=joselct17_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD" \
          | jq -r '.projectStatus.status')

          if [[ "$STATUS" != "OK" ]]; then
            echo "Quality Gate failed: $STATUS"
            exit 1
          fi
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

