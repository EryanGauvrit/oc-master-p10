name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job pour tester et build le backend
  backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build Backend
        run: |
          cd back
          mvn clean install
          
      - name: Run Backend Tests with Coverage
        run: |
          cd back
          mvn test

      - name: Generate JaCoCo Coverage Report
        run: |
          cd back
          mvn jacoco:report

      - name: Upload JaCoCo Coverage Report as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: jacoco-coverage-report
          path: back/target/site/jacoco/index.html

      - name: Build Docker image for Backend
        run: |
          cd back
          docker build -t bobapp-back:latest .

      - name: Save Backend Docker image as artifact
        run: docker save bobapp-back:latest | gzip > bobapp-back.tar.gz
      - uses: actions/upload-artifact@v3
        with:
          name: bobapp-back
          path: bobapp-back.tar.gz

  # Job pour tester et build le frontend
  frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'latest'

      - name: Install dependencies for Frontend
        run: |
          cd front
          npm install

      - name: Build Frontend
        run: |
          cd front
          npm run build

      - name: Build Docker image for Frontend
        run: |
          cd front
          docker build -t bobapp-front:latest .

      - name: Save Frontend Docker image as artifact
        run: docker save bobapp-front:latest | gzip > bobapp-front.tar.gz
      - uses: actions/upload-artifact@v3
        with:
          name: bobapp-front
          path: bobapp-front.tar.gz

  # Job pour analyser la qualité du code avec SonarQube
  quality_analysis:
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SonarQube Scanner
        uses: SonarSource/sonarcloud-github-action@v1
        with:
          token: ${{ secrets.SONAR_TOKEN }}

      - name: Run SonarQube analysis
        run: |
          mvn sonar:sonar -Dsonar.projectKey=<YOUR_PROJECT_KEY> -Dsonar.host.url=https://sonarcloud.io
          # Vous pouvez remplacer <YOUR_PROJECT_KEY> par votre propre clé de projet

  # Job pour déployer sur Docker Hub
  deploy:
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    steps:
      # Étape 1 : Télécharger et charger l'image Docker du backend
      - name: Download Backend Docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: bobapp-back
      - name: Load Backend Docker image
        run: gunzip -c bobapp-back.tar.gz | docker load

      # Étape 2 : Télécharger et charger l'image Docker du frontend
      - name: Download Frontend Docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: bobapp-front
      - name: Load Frontend Docker image
        run: gunzip -c bobapp-front.tar.gz | docker load
  
      # Étape 3 : Se connecter à Docker Hub
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
  
      # Étape 4 : Taguer et pousser l'image Docker du backend
      - name: Tag and Push Backend Docker image
        run: |
          docker tag bobapp-back:latest ${{ secrets.DOCKER_USERNAME }}/bobapp-back:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/bobapp-back:latest
  
      # Étape 5 : Taguer et pousser l'image Docker du frontend
      - name: Tag and Push Frontend Docker image
        run: |
          docker tag bobapp-front:latest ${{ secrets.DOCKER_USERNAME }}/bobapp-front:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/bobapp-front:latest
