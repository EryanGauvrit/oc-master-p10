name: GitHub Actions ðŸš€
on: 
  push:
    branches:
      - main
      - patch-1
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      
      - name: Install SonarScanner
        run: |
              wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
              unzip sonar-scanner-cli-5.0.1.3006-linux.zip
              export PATH="/opt/hostedtoolcache/Java_Adopt_jdk/11.0.23-9/x64/bin/sonar-scanner-5.0.1.3006-linux/bin:$PATH"

      - name: Debug
        run: |
          echo $PATH
          ls -l sonar-scanner-5.0.1.3006-linux/bin/sonar-scanner

      - name: sonarsource/sonar-scanner-cli
        run: sonar-scanner-5.0.1.3006-linux/bin/sonar-scanner \
             -Dsonar.sources=. \ 
             -Dsonar.projectBaseDir=C:/Users/33612/Documents/OpenClassrooms/Projet 10/Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD \ 
             -Dsonar.host.url=SONAR_HOST_URL \ 
             -Dsonar.token=SONAR_TOKEN

      - name: Build with Maven
        run: mvn -B clean package
        working-directory: ${{ github.workspace }}/back

      - name: Test with JaCoCo
        run: mvn test jacoco:report
        working-directory: ${{ github.workspace }}/back

      - name: Archive JaCoCo reports
        uses: actions/upload-artifact@v2
        with:
          name: jacoco-reports
          path: target/site/jacoco/

        # COVERAGE RAPPORTS FRONT ðŸš€

      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.12.2'

      - name: Clean npm and Install dependencies
        run: |
          cd ${{ github.workspace }}/front
          npm cache clean --force
          npm install

      - name: Run tests and generate coverage
        run: |
          npm test --prefix ${{ github.workspace }}/front -- --browsers=ChromeHeadless --code-coverage --watch=false
        
      - name: Archive test and coverage reports
        uses: actions/upload-artifact@v2
        with:
          name: test-and-coverage-reports
          path: ${{ github.workspace }}/front/coverage/ 
