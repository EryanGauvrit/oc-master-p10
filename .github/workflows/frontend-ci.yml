name: Frontend CI
on:
  push:
    branches:
      - main 
      - features
      - 'front/**'
      - 'fullstack/**'
  pull_request:
    branches:
      - main
      - features

jobs:
  build:
    runs-on: ubuntu-latest  
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22' 

    - name: Install dependencies 
      run: |
        cd front  
        npm install  
      
    - name: Install Angular CLI
      run: npm install -g @angular/cli


  test:
    runs-on: ubuntu-latest  
    needs: build
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22' 

    - name: Run frontend with code coverage
      run: |
        cd front 
        npm run test -- --no-watch --browsers=ChromeHeadless --code-coverage

    - name: Upload frontend coverage reports 
      uses: actions/upload-artifact@v4
      with:
        name: frontend-coverage
        path: front/coverage/bobapp/*

  analyze:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Cache SonarQube packages
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: SonarQube Analysis for Frontend
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      run: |
        cd front
        npx sonarqube-scanner \
          -Dsonar.projectKey=bobapp \
          -Dsonar.projectName='bobapp' \
          -Dsonar.sources=src \
          -Dsonar.tests=**/*.spec.js \
          -Dsonar.javascript.lcov.reportPaths=coverage/bobapp/lcov.info \
          -Dsonar.exclusions=**/node_modules/**,**/*.spec.ts
