name: Frontend CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  frontend-pipeline:
    name: Frontend CI/CD Pipeline
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: 'front'

    steps:
      # Etape 1 : Cloner le repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better relevancy of analysis

      # Etape 2 : Configurer Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Etape 3 : Installer les dépendances
      - name: Install dependencies
        run: npm install

      # Etape 4 : Executer les tests avec couverture et generer le rapport
      - name: Run Tests and Generate Coverage Report
        run: npm run test -- --watch=false --code-coverage

      # Étape 5 : Upload du rapport de couverture
      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage-report
          path: front/coverage

      # Étape 6 : Analyse avec SonarCloud
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v4
        with:
          args: >
            -Dsonar.projectKey=PlaNeiT_OC-BobApp
            -Dsonar.organization=planeit
            -Dsonar.sources=src
            -Dsonar.tests=src
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.exclusions=**/node_modules/**,**/dist/**,**/*.spec.ts
            -Dsonar.test.inclusions=**/*.spec.ts
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
