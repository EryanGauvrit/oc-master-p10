name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    name: Run Backend & Frontend Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # === BACK-END ===
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Run backend tests with coverage
        working-directory: ./back
        run: mvn clean verify

      - name: Upload backend coverage report
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: back/target/site/jacoco/

      - name: üöÄ Deploy backend coverage to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: back/target/site/jacoco
          destination_dir: backend
          keep_files: true

      # === FRONT-END ===
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Install dependencies
        working-directory: ./front
        run: npm ci

      - name: Run frontend tests with coverage
        working-directory: ./front
        run: npm run test -- --watch=false --browsers=ChromeHeadless --code-coverage

      - name: Upload frontend coverage report
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: front/coverage/

      - name: üöÄ Deploy frontend coverage to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: front/coverage/bobapp
          destination_dir: frontend
          keep_files: true

  sonar_backend:
    name: SonarCloud Analysis - Backend
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Backend Coverage
        uses: actions/download-artifact@v4
        with:
          name: backend-coverage
          path: back/target/site/jacoco/

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Compile backend (target/classes required for Sonar)
        working-directory: ./back
        run: mvn verify -DskipTests

      - name: Run SonarCloud Scan ‚Äì Backend
        uses: SonarSource/sonarcloud-github-action@v5.0.0
        with:
          projectBaseDir: ./back
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_BACK }}

  sonar_frontend:
    name: SonarCloud Analysis - Frontend
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Frontend Coverage
        uses: actions/download-artifact@v4
        with:
          name: frontend-coverage
          path: front/coverage/

      - name: Run SonarCloud Scan ‚Äì Frontend
        uses: SonarSource/sonarcloud-github-action@v5.0.0
        with:
          projectBaseDir: ./front
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONT }}

  deploy:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest
    needs: [sonar_backend, sonar_frontend]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    env:
      DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      # --- DOCKER HUB LOGIN ---
      - name: üîê Log in to Docker Hub
        run: echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin

      # === BACKEND IMAGE ===
      - name: üì¶ Build backend Docker image
        working-directory: ./back
        run: docker build -t ${DOCKER_USERNAME}/bobapp-back:latest .

      - name: üöÄ Push backend Docker image
        run: docker push ${DOCKER_USERNAME}/bobapp-back:latest

      # === FRONTEND IMAGE ===
      - name: üì¶ Build frontend Docker image
        working-directory: ./front
        run: docker build -t ${DOCKER_USERNAME}/bobapp-front:latest .

      - name: üöÄ Push frontend Docker image
        run: docker push ${DOCKER_USERNAME}/bobapp-front:latest
