name: Frontend CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: front

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: front/package.json

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build --if-present

      - name: Test
        run: npm test --code-coverage

      - name: Code coverage
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: ${{ github.workspace }}/front/coverage/bobapp/**

      - name: Scan SonarCloud
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: front
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONT }}
          SONAR_BRANCH_NAME: main

      - name: Extract Docker image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKER_USERNAME }}/bob-app-front

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

#      - name: Build and push Docker image
#        run: |
#          docker build -t bob-app-front .
#          docker tag bob-app-front ${{ vars.DOCKER_USERNAME }}/bob-app-front:latest
#          docker push ${{ vars.DOCKER_USERNAME }}/bob-app-front:latest

#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: ${{ github.event_name == 'pull_request' && github.base_ref == 'main' }}
          tags: ${{ steps.meta.outputs.tags }}
          annotations: ${{ steps.meta.outputs.annotations }}
          provenance: true
          sbom: true