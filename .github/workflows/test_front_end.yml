# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Backend and Frontend Tests

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  frontend-tests:
    runs-on: ubuntu-latest
    name: Frontend Tests (Angular with Jasmine/Karma)

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"
          cache-dependency-path: front/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: front

      - name: Run Angular Tests (Jasmine/Karma)
        run: npm run test-coverage
        working-directory: front

      - name: Debug coverage directory
        run: ls -R front/coverage

      - name: Display test-results.xml content
        run: cat front/coverage/test-results.xml

      - name: Generate Test Report
        uses: phoenix-actions/test-reporting@v8
        id: test-report-frontend
        if: success() || failure()
        with:
          name: Angular Tests
          path: front/coverage/test-results.xml
          reporter: java-junit

      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        id: coverage-report-frontend
        with:
          filename: front/coverage/**/cobertura-coverage.xml
          badge: true,
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: "60 80"
  backend-tests:
    runs-on: ubuntu-latest
    name: Backend Tests (Maven with Jacoco)

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: "11"
          distribution: "temurin"
          cache: maven

      - name: Run tests with Maven
        run: mvn -B test --file back/pom.xml

      - name: Generate Jacoco test report
        run: mvn jacoco:report --file back/pom.xml

      - name: Upload backend test report
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-report
          path: back/target/site/jacoco

      - name: Test Report Backend
        uses: phoenix-actions/test-reporting@v8
        id: test-report-backend
        if: success() || failure()
        with:
          name: Backend Tests
          path: back/target/surefire-reports/*.xml
          reporter: java-junit

      - name: JaCoCo Code Coverage Report
        id: coverage-report-backend
        uses: PavanMudigonda/jacoco-reporter@v5.0
        with:
          coverage_results_path: back/target/site/jacoco/jacoco.xml
          coverage_report_name: Coverage
          coverage_report_title: JaCoCo
          github_token: ${{ secrets.GITHUB_TOKEN }}
          skip_check_run: false
          minimum_coverage: 80
          fail_below_threshold: false
          publish_only_summary: false
  post-comment:
    runs-on: ubuntu-latest
    needs: [frontend-tests, backend-tests]
    steps:
      - name: Create PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          message: |
            ## ðŸ›  Test Results & Coverage
            ### ðŸ“Š Coverage
            - **Frontend:** ${{ steps.coverage-report-frontend.outputs.markdown }}
            - **Backend:** ${{ steps.coverage-report-backend.outputs.markdown }}

            ### âœ… Test Reports
            - **Frontend:** ${{ steps.test-report-frontend.outputs.report }}
            - **Backend:** ${{ steps.test-report-backend.outputs.report }}
