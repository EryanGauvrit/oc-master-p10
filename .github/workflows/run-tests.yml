name: Maven Run Tests and Generate Coverage Reports

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Étape 1 : Cloner le dépôt
      - uses: actions/checkout@v3

      # Étape 2 : Configurer JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      # Étape 3 : Construire le projet avec Maven
      - name: Build with Maven
        run: mvn -B clean package --file pom.xml

      # Étape 4 : Exécuter les tests avec Maven
      - name: Run Tests with Maven
        run: mvn -B test --file pom.xml

      # Étape 5 : Générer le rapport de couverture Jacoco
      - name: Generate Coverage Report
        run: mvn jacoco:report --file pom.xml

      # Étape 6 : Upload des rapports de couverture
      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: backend-coverage-report
          path: target/site/jacoco

      # Étape 7 : Analyse avec SonarCloud
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v3.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=014949fee5a360e3df465bf9a37df1e785d9c842
            -Dsonar.organization=oumousdb
            -Dsonar.sources=src/main/java
            -Dsonar.tests=src/test/java
            -Dsonar.java.binaries=target/classes
            -Dsonar.junit.reportPaths=target/surefire-reports
            -Dsonar.jacoco.reportPaths=target/site/jacoco/jacoco.xml
            -Dsonar.project.monorepo.enabled=false
            -Dsonar.issues.defaultAssigneeLogin=your-sonarcloud-username
            -Dsonar.sensor.cache.project.enable=true
