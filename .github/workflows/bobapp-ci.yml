name: Bobapp CI

on:
  push:
    branches:
      - main
      - features
      - "feat/**"
      - "fix/**"
      - "hotfix/**"
      - "refactor/**"  
  pull_request:
    branches:
      - main
      - features

jobs:
  build:
    name: Build backend and frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Backend build
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: "11"
          distribution: "temurin"

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build backend
        run: |
          cd back
          mvn clean install -DskipTests

      - name: Upload backend build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: back/target

      # Frontend build
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install dependencies & build frontend
        run: |
          cd front  
          npm install
          npm run build

      - name: Upload frontend build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: front/dist

  test:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download backend build artifacts
        uses: actions/download-artifact@v4
        with:
          name: backend-build
          path: back/target

      - name: Download frontend build artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: front/dist
          

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: "11"
          distribution: "temurin"
          
      # Cache Maven packages
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      
      # Tests backend
      - name: Run backend tests
        run: |
          cd back
          mvn test

      - name: Upload backend coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: back/target/site/jacoco/jacoco.xml

      # Setup Node pour les tests frontend
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          
      # Install frontend dependencies
      - name: Install dependencies
        run: |
          cd front  
          npm install
          
      # Tests frontend
      - name: Run frontend with code coverage
        run: |
          cd front 
          npm run test -- --no-watch --browsers=ChromeHeadless --code-coverage

      - name: Upload frontend coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: front/coverage/bobapp/icov.info

  sonarcloud:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          

      - name: Download backend build artifacts
        uses: actions/download-artifact@v4
        with:
          name: backend-build
          path: back/target

      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
          
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: "11"
          distribution: "temurin"

      # SonarCloud Analysis
      - name: Run SonarQube Scanner for entire project
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io

  docker:
    name: Build and push Docker images
    needs: [sonarcloud]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Download backend build artifacts
        uses: actions/download-artifact@v4
        with:
          name: backend-build
          path: back/target

      - name: Download frontend build artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: front/dist
          
      - name: DockerHub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Backend Docker image
        run: |
          cd back
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest

      - name: Build and push Frontend Docker image
        run: |
          cd front
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest
