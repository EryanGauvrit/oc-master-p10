name: Bobapp CI

on:
  push:
    branches:
      - main
      - features
      - "feat/**"
      - "fix/**"
      - "hotfix/**"
      - "refactor/**"
  pull_request:
    branches:
      - main
      - features

jobs:
  backend:
    name: Backend build and test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: "11"
          distribution: "temurin"

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: maven-${{ runner.os }}-

      - name: Build and test backend
        run: |
          cd back
          mvn clean package

      - name: Upload backend build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: back/target/*.jar
          retention-days: 1

      - name: Upload backend coverage
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: back/target/site/jacoco/
          retention-days: 1

  frontend:
    name: Frontend build and test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: 'npm'
          cache-dependency-path: 'front/package-lock.json'

      - name: Install dependencies
        run: |
          cd front
          npm ci

      - name: Build frontend
        run: |
          cd front
          npm run build

      - name: Run frontend tests with coverage
        run: |
          cd front
          npm run test -- --no-watch --browsers=ChromeHeadless --code-coverage

      - name: Upload frontend build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: front/dist
          retention-days: 1

      - name: Upload frontend coverage
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: front/coverage/bobapp
          retention-days: 1

  sonarcloud:
    name: SonarCloud Analysis
    needs: [backend, frontend]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download backend coverage
        uses: actions/download-artifact@v4
        with:
          name: backend-coverage
          path: back/target/site/jacoco

      - name: Download frontend coverage
        uses: actions/download-artifact@v4
        with:
          name: frontend-coverage
          path: front/coverage/bobapp

      - name: Upload frontend build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: front/dist

      - name: Upload backen build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: back/target/*.jar

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Run SonarQube Scanner
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io

  docker:
    name: Build and push Docker images
    needs: [sonarcloud]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Download backend artifacts
        uses: actions/download-artifact@v4
        with:
          name: backend-build
          path: back/target

      - name: Download frontend artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: front/dist

      - name: DockerHub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Backend Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./back
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/backend:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/backend:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/backend:buildcache,mode=max

      - name: Build and push Frontend Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./front
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/frontend:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/frontend:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/frontend:buildcache,mode=max