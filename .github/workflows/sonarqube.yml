name: SonarQube Local Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonarqube-local:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout du code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. Lancer SonarQube local avec Docker
      - name: Start SonarQube server
        run: |
          docker run -d --name sonarqube \
            -p 9000:9000 \
            -e SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true \
            sonarqube:lts
          echo "Waiting for SonarQube to start..."

      # 3. Attendre que SonarQube soit prêt
      - name: Wait for SonarQube to be ready
        run: |
          until $(curl --output /dev/null --silent --head --fail http://localhost:9000); do
            printf '.'
            sleep 5
          done
          echo "SonarQube is up!"

      # 4. Configuration JDK pour le backend
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 11

      # 5. Build et analyse backend avec SonarQube
      - name: Build and Analyze Backend
        working-directory: ./back
        env:
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
        run: |
          mvn -B clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:5.0.0.4389:sonar \
            -Dsonar.projectKey=mon-projet-local \
            -Dsonar.host.url=http://localhost:9000 \
            -Dsonar.login=$SONAR_TOKEN

      # 6. Afficher les logs en cas d'échec
      - name: Show SonarQube logs if it fails
        if: failure()
        run: docker logs sonarqube

      # 7. Nettoyage du conteneur SonarQube
      - name: Stop and clean up SonarQube container
        if: always()
        run: docker stop sonarqube && docker rm sonarqube
