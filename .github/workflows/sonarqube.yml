name: SonarQube Analysis
on:
  push:
    branches:
      - sonar
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  sonar-analysis:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    
    steps:
      # Étape 1 : Checkout du code
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Récupère l'historique complet
      
      # Étape 2 : Configuration de Java
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'maven'
      
      # Étape 3 : Build et génération du rapport de couverture
      - name: Build and generate coverage report
        working-directory: ./back
        run: |
          mvn clean verify jacoco:report
      
      # Étape 4 : Analyse SonarCloud
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectBaseDir: ./back
          args: >
            -Dsonar.projectKey=romain-25_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD
            -Dsonar.organization=romain-25
            -Dsonar.sources=src/main/java
            -Dsonar.tests=src/test/java
            -Dsonar.java.binaries=target/classes
            -Dsonar.java.test.binaries=target/test-classes
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
