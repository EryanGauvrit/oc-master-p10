# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs 

name: CI-CD

on:
  push:
    branches: [main, dev/*]
  pull_request:
    branches: [main, dev/*] # Runs on pull requests to the main and dev branches
         
jobs:
  test-front:
    runs-on: ubuntu-latest
    defaults:
      run:
         working-directory: front
        
    strategy:
      matrix:
        node-version: [22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Checkout code # Downloads the files from the repository
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }} # Installs Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }} # Specifies the Node.js version to use
        cache: 'npm' # Caches npm dependencies
        cache-dependency-path: 'front/package-lock.json' # Path to the package-lock.json for caching
    - run: npm install

    - name: Run front tests in production mode
      run: npm run test:prod

    - name: Send results to SonarCloud
      uses: SonarSource/sonarcloud-github-action@master
      with:
          args: > # Configures SonarCloud parameters, setting the path to coverage reports
            -Dsonar.organization=williammiere
            -Dsonar.projectKey=williammiere_gerez-un-projet-collaboratif-en-int-grant-une-demarche-ci-cd-front
            -Dsonar.sources=front/src
            -Dsonar.tests=front/src
            -Dsonar.typescript.lcov.reportPaths=front/coverage/bobapp/lcov-report/lcov.info
            -Dsonar.ts.tslintconfigpath=tslint.json
            -Dsonar.exclusions=front/**/node_modules/**,**/assets/**,**/*.spec.ts
            -Dsonar.test.inclusions=front/**/*.spec.ts
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_SECRET_FRONT }}

  test-back:
    runs-on: ubuntu-latest
    defaults:
      run:
         working-directory: back

    steps:
    - name: Checkout code # Downloads the files from the repository
      uses: actions/checkout@v4

    - name: Install Java 11
      uses: actions/setup-java@v4.4.0
      with:
        java-version: 11
        distribution: "temurin"
        cache: "maven"

    - name: Cache SonarQube packages # Configuring the cache for SonarQube packages
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar # Creates a unique key for the cache based on the operating system
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache Maven packages # Configuring the cache for Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }} # Hashes the pom.xml files to create a unique key for the cache
        restore-keys: ${{ runner.os }}-m2
        
    - name: Build and analyze # Build the project and send the results to SonarCloud
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_SECRET_BACK }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=williammiere_githubgerez-un-projet-collaboratif-en-int-grant-une-demarche-ci-cd-back

  build-and-push:
    needs: [test-front, test-back] # Only run if both tests jobs were successful
    if: ${{ success() }} 
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code # Downloads the files from the repository
        uses: actions/checkout@v4
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Setup Buildx # Buildx is a Docker CLI plugin for extended build capabilities with BuildKit
        uses: docker/setup-buildx-action@v3

      - name: Build & push front
        uses: docker/build-push-action@v6
        with:
          context: front
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/front

      - name: Build & push back
        uses: docker/build-push-action@v6
        with:
          context: back
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/back