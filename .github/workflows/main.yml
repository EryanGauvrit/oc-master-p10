name: Test and report

on:
  push:
    branches:
      - main

jobs:
  backend-tests:
    name: Back-end tests and jacoco report
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17 for x64
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'
          architecture: x64
    
      - name: Build and test with Maven
        run: mvn clean test
        working-directory: ./back
    
      - name: Upload Jacoco report
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-coverage
          path: ./back/target/site/jacoco/

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        working-directory: ./back
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=romain-25_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD_4193a52b-e2d1-420a-87f7-f1fe2cb70a3c -Dsonar.projectName='Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD'
            
  frontend-tests:
    name: Front-end tests and coverage report
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
            
      - name: Install dependencies
        run: npm install
        working-directory: ./front

      - name: Run tests and generate coverage
        run: npm run test -- --code-coverage --no-watch --no-progress --browsers=ChromeHeadless
        working-directory: ./front

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: frontend-test-coverage
          path: ./front/coverage/
