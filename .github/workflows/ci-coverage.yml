name: CI and Coverage Report

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-backend:
    name: Build and Test Backend with Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: "adopt"
          java-version: "11"

      # Rendre le fichier mvnw exécutable
      - name: Make Maven Wrapper Executable
        working-directory: back
        run: chmod +x mvnw

      # Installer les dépendances pour le back-end (en ignorant les tests au début)
      - name: Install Dependencies for Backend
        working-directory: back
        run: ./mvnw clean install -DskipTests=true

      # Lancer les tests et générer les rapports de couverture pour le back-end
      - name: Run Tests and Generate Coverage Report for Backend
        working-directory: back
        run: ./mvnw test

      # Archiver le rapport de JaCoCo pour le back-end
      - name: Archive JaCoCo Coverage Report for Backend
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: back/target/site/jacoco

  build-frontend:
    name: Build and Test Frontend with Coverage
    runs-on: ubuntu-latest
    needs: build-backend

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      # Installer Google Chrome pour exécuter ChromeHeadless
      - name: Install Google Chrome
        run: |
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
          sudo apt-get update
          sudo apt-get install google-chrome-stable

      # Installer les dépendances pour le front-end
      - name: Install Dependencies for Frontend
        working-directory: front
        run: npm install

      # Lancer les tests et générer les rapports de couverture pour le front-end
      - name: Run Tests and Generate Coverage Report for Frontend
        working-directory: front
        run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadless --code-coverage

      # Archiver le rapport de couverture pour le front-end
      - name: Archive Coverage Report for Frontend
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage-report
          path: front/coverage
