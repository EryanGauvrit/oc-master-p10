name: CI and Coverage Report

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write

jobs:
  build-backend:
    name: Build and Test Backend with Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: "adopt"
          java-version: "11"

      - name: Make Maven Wrapper Executable
        working-directory: back
        run: chmod +x mvnw

      - name: Install Dependencies for Backend
        working-directory: back
        run: ./mvnw clean install -DskipTests=true

      - name: Run Tests and Generate Coverage Report for Backend
        working-directory: back
        run: ./mvnw test

      - name: Archive JaCoCo Coverage Report for Backend
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: back/target/site/jacoco/jacoco.xml
      - name: List Available Artifacts
        run: |
          curl -sH "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts | jq .

  build-frontend:
    name: Build and Test Frontend with Coverage
    runs-on: ubuntu-latest
    needs: build-backend

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Install Google Chrome
        run: |
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
          sudo apt-get update
          sudo apt-get install google-chrome-stable

      - name: Install Dependencies for Frontend
        working-directory: front
        run: npm install

      - name: Run Tests and Generate Coverage Report for Frontend
        working-directory: front
        run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadless --code-coverage

      - name: Archive Coverage Report for Frontend
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage-report
          path: front/coverage

  sonarqube:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: "temurin"
          java-version: "17"
      - name: Wait for Artifact Availability
        run: sleep 30
      - name: List Available Artifacts
        run: |
          curl -sH "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts | jq .

      - name: Download Backend Coverage Artifact
        run: |
          curl -L -o jacoco-report.zip -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository }}/actions/artifacts/2301217797/zip
          unzip jacoco-report.zip -d back/target/site/jacoco

      - name: Download Frontend Coverage Artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-coverage-report

      - name: Run SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=notmga
            -Dsonar.projectKey=NotMGA_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD
            -Dsonar.sources=.
            -Dsonar.java.binaries=back/target
            -Dsonar.jacoco.reportPaths=jacoco-report/jacoco.xml
            -Dsonar.javascript.lcov.reportPaths=frontend-coverage-report/lcov.info
            -Dsonar.host.url=https://sonarcloud.io
