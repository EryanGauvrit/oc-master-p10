name: SonarCloud Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonarcloud:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout du code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. Configuration JDK pour le backend
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 11

      # 3. Build et analyse backend avec SonarCloud
      - name: Build and Analyze Backend
        working-directory: ./back
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn -B clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=OumouSdb_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD \
            -Dsonar.organization=oumousdb \
            -Dsonar.host.url=https://sonarcloud.io

      # 4. Configuration Node.js pour le frontend
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      # 5. Install et test frontend
      - name: Install Frontend Dependencies
        working-directory: ./front
        run: npm ci

      - name: Install Angular CLI
        run: npm install -g @angular/cli

      - name: Run Frontend Tests
        working-directory: ./front
        run: npm run test:prod -- --code-coverage

      # 6. Analyse frontend avec SonarCloud
      - name: Analyze Frontend
        uses: sonarsource/sonarcloud-github-action@v3.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=OumouSdb_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD
            -Dsonar.organization=oumousdb
            -Dsonar.sources=front/src
            -Dsonar.javascript.lcov.reportPaths=front/coverage/lcov.info
            -Dsonar.host.url=https://sonarcloud.io
