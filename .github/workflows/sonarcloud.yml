name: CI/CD Pipeline with SonarCloud

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonarcloud:
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Checkout du code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Étape 2 : Configuration du backend
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      # Étape 3 : Construction backend
      - name: Build Backend
        run: mvn clean package --file back/pom.xml

      # Étape 4 : Configuration du frontend
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Install Frontend Dependencies
        run: npm ci
        working-directory: ./front

      # Étape 5 : Tests backend et frontend
      - name: Run Backend Tests
        run: mvn test --file back/pom.xml

      - name: Run Frontend Tests
        run: npm run test:prod -- --code-coverage
        working-directory: ./front

      # Étape 6 : Analyse SonarCloud
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v3.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=OumouSdb_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD
            -Dsonar.organization=oumousdb
            -Dsonar.sources=back/src/main/java,front/src
            -Dsonar.tests=back/src/test/java
            -Dsonar.java.binaries=back/target
            -Dsonar.junit.reportPaths=back/target/surefire-reports
            -Dsonar.jacoco.reportPaths=back/target/site/jacoco/jacoco.xml
            -Dsonar.javascript.lcov.reportPaths=front/coverage/lcov.info
            -Dsonar.exclusions=front/src/**/*.spec.ts
