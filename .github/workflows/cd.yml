name: CD - Build and Push to Docker Hub

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  validate-ci:
    name: Validate CI Success
    runs-on: ubuntu-latest
    steps:
      - name: CI Validation
        run: echo "All tests and quality checks must pass before proceeding with deployment."

  build-and-push-backend:
    name: Build & Push Backend
    runs-on: ubuntu-latest
    needs: validate-ci  # Démarre après la validation CI
    if: success()  # Exécuter seulement si validate-ci a réussi
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Build backend JAR
        working-directory: back
        run: mvn clean package -DskipTests

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push backend Docker image
        working-directory: back
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/bobapp-backend:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/bobapp-backend:latest

  build-and-push-frontend:
    name: Build & Push Frontend
    runs-on: ubuntu-latest
    needs: build-and-push-backend  # Exécuter après le backend
    if: success()  # Exécuter seulement si le backend a réussi
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push frontend Docker image
        working-directory: front
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/bobapp-frontend:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/bobapp-frontend:latest
