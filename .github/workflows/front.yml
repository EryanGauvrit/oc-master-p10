name: Front
on:
      push:
            branches: ['main']
      pull_request:
            branches: ['main']
permissions:
      contents: write
jobs:
      ci:
            name: CI
            runs-on: ubuntu-latest
            strategy:
                  matrix:
                        node-version: [20]
            steps:
                  - name: Check source code
                    uses: actions/checkout@v4

                  - name: Setup Node
                    uses: actions/setup-node@v4
                    with:
                          node-version: 20
                          cache: 'npm'
                          cache-dependency-path: front/package-lock.json

                  - name: Install dependencies
                    run: npm ci
                    working-directory: front

                  - name: Run tests
                    run: npm run test:prod # --browsers=ChromeHeadlessNoSandbox
                    working-directory: front

                  - name: Upload report
                    uses: actions/upload-artifact@v4
                    with:
                          name: karma-report
                          path: front/coverage/bobapp

                  - name: Push Karma report
                    uses: ad-m/github-push-action@master
                    with:
                          github_token: ${{ secrets.GIT_TOKEN }}
                          branch: ${{ github.ref }}
      build:
            name: Build and analyze front
            runs-on: ubuntu-latest
            services:
                  sonarqube:
                        image: sonarqube:latest
                        ports:
                              - 9000:9000
                        #options: --health-cmd="curl --fail http://localhost:9000/api/system/health || exit 1" --health-interval=5s --health-timeout=10s --health-retries=3
                        env:
                              SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: true

            steps:
                  - name: Wait for SonarQube to be ready
                    run: |
                          until curl -s http://localhost:9000/api/system/status | grep -q '"status":"UP"'; do
                                echo "Waiting for SonarQube to be up..."
                                sleep 10
                          done

                  - name: Test SonarQube connection
                    run: curl -v ${{ secrets.SONAR_HOST_URL }}

                  - name: Check out code
                    uses: actions/checkout@v4
                    with:
                          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
                  - name: SonarQube Scan
                    uses: sonarsource/sonarqube-scan-action@master
                    env:
                          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
                          SONAR_HOST_URL: http://localhost:9000 #${{ secrets.SONAR_HOST_URL }}

                    with:
                          args: -Dsonar.projectBaseDir=front
      docker:
            name: Docker front
            runs-on: ubuntu-latest
            needs: [ci, build]
            steps:
                  - name: Set up QEMU
                    uses: docker/setup-qemu-action@v3
                  - name: Set up Docker Buildx
                    uses: docker/setup-buildx-action@v3
                  - name: Login to Docker Hub
                    uses: docker/login-action@v3
                    with:
                          username: ${{ secrets.DOCKERHUB_USERNAME }}
                          password: ${{ secrets.DOCKERHUB_TOKEN }}
                  - name: Build and push
                    uses: docker/build-push-action@v6
                    with:
                          context: ./front
                          file: front/Dockerfile
                          push: true
                          tags: jufau/bobapp:latest
